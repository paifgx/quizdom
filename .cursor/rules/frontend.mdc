---
description: 
globs: frontend/**/*
alwaysApply: false
---
## Dependencies
- Keep React, React DOM, React Router, Vite and Jest on their latest stable major version
- Upgrade soon after each stable release, unless a breaking change blocks the project

## Folder structure
- `frontend/app/` → app bootstrap: router, providers, ErrorBoundary  
- `frontend/app/pages/` → route components (`*Page.tsx`)
- `frontend/app/layouts/` → layout wrappers with `<Outlet>`
- `frontend/app/components/` → shared UI pieces
- `frontend/app/features/` → domain modules (pages, logic, state)
- `frontend/app/hooks/` → custom hooks
- `frontend/app/lib/` → helpers (fetch, Zod, date utilities)
- `frontend/app/services/` → API clients
- `frontend/app/types/` → exported TypeScript types
- `frontend/app/styles/` → global CSS or Tailwind config
- `frontend/tests/` → tests

## File naming
- Route files end with `Page.tsx` (e.g. `AboutPage.tsx` → `/about`)
- Place loader/action files next to the route (`AboutPage.loader.ts`)
- Keep tests beside code with `.test.tsx`

## Routing
- Use React Router v7
- Define router in `frontend/app/router.tsx`, export `createBrowserRouter()`
- Provide global `ErrorBoundary` in `frontend/app/ErrorBoundary.tsx`
- Add layout routes in `frontend/app/layouts/`
- Lazy-load routes with `React.lazy` + `<Suspense>` fallback
- Limit nesting to three `<Outlet>` levels
- Use `<NavLink>` for active links, `<Link>` elsewhere

## Data & state
- Fetch initial data in loader functions, not in `useEffect`
- Hold global state in React Context + `useReducer`
- Switch to Redux only if scale demands it
- Store Zod schemas next to loaders for type-safe validation

## Styling & testing
- Use Tailwind first; fall back to CSS Modules when needed
- Test every route with `@testing-library/react` + `MemoryRouter`
- Add snapshot tests only when markup must stay unchanged

## TypeScript
- Forbid `any`
- Compile with `--strict` and `--noUncheckedIndexedAccess`
- Expose public types from `frontend/types/`

## Build commands
- `pnpm dev` - start Vite dev server
- `pnpm test` - run Jest
- `pnpm lint` - run ESLint + Prettier

## Templates (via @rule)
- `@router-template.tsx` – basic router skeleton
- `@page-template.tsx` – starter page with Suspense wrapper
